ASSIGNMENT ::= IDENTIFIER = EXPRESSION ; 
DECLARATION ::= PRIMITIVE_TYPE IDENTIFIER ; 
EXPRESSION ::= NUMBER EXPRESSION' | IDENTIFIER EXPRESSION' | ( EXPRESSION ) EXPRESSION' 
EXPRESSION' ::= INFIX_OPERATOR EXPRESSION EXPRESSION' | \L 
IF ::= if ( IF' 
INFIX_OPERATOR ::= + | - | * | / | % | < | > | <= | >= | == | != | \| | && 
METHOD_BODY ::= STATEMENT_LIST 
PRIMITIVE_TYPE ::= int | float 
STATEMENT ::= if ( STATEMENT'' | IDENTIFIER = STATEMENT' | WHILE | int IDENTIFIER ; | float IDENTIFIER ; 
STATEMENT_LIST ::= float IDENTIFIER ; STATEMENT_LIST''''''''''' | int IDENTIFIER ; STATEMENT_LIST''''''''' | WHILE STATEMENT_LIST'''''' | if ( STATEMENT_LIST''' | IDENTIFIER = STATEMENT_LIST' 
WHILE ::= while ( WHILE' 
IF' ::= NUMBER EXPRESSION' ) { STATEMENT } else { STATEMENT } | IDENTIFIER EXPRESSION' ) { STATEMENT } else { STATEMENT } | ( EXPRESSION ) EXPRESSION' ) { STATEMENT } else { STATEMENT } 
STATEMENT' ::= NUMBER EXPRESSION' ; | IDENTIFIER EXPRESSION' ; | ( EXPRESSION ) EXPRESSION' ; 
STATEMENT_LIST' ::= ( EXPRESSION ) EXPRESSION' ; STATEMENT_LIST''''''' | IDENTIFIER EXPRESSION' ; STATEMENT_LIST'''' | NUMBER EXPRESSION' ; STATEMENT_LIST'' 
WHILE' ::= NUMBER EXPRESSION' ) { WHILE''''''' | IDENTIFIER EXPRESSION' ) { WHILE'''' | ( EXPRESSION ) EXPRESSION' ) { WHILE'' 
STATEMENT_LIST'' ::= STATEMENT_LIST | \L 
WHILE'' ::= if ( WHILE''''' | IDENTIFIER = WHILE''' | WHILE } | int IDENTIFIER ; } | float IDENTIFIER ; } 
WHILE''' ::= NUMBER EXPRESSION' ; } | IDENTIFIER EXPRESSION' ; } | ( EXPRESSION ) EXPRESSION' ; } 
STATEMENT'' ::= NUMBER EXPRESSION' ) { STATEMENT } else { STATEMENT } | IDENTIFIER EXPRESSION' ) { STATEMENT } else { STATEMENT } | ( EXPRESSION ) EXPRESSION' ) { STATEMENT } else { STATEMENT } 
STATEMENT_LIST''' ::= ( EXPRESSION ) EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST'''''''''' | IDENTIFIER EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST'''''''' | NUMBER EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST''''' 
STATEMENT_LIST'''' ::= STATEMENT_LIST | \L 
WHILE'''' ::= if ( WHILE'''''''' | IDENTIFIER = WHILE'''''' | WHILE } | int IDENTIFIER ; } | float IDENTIFIER ; } 
WHILE''''' ::= NUMBER EXPRESSION' ) { STATEMENT } else { STATEMENT } } | IDENTIFIER EXPRESSION' ) { STATEMENT } else { STATEMENT } } | ( EXPRESSION ) EXPRESSION' ) { STATEMENT } else { STATEMENT } } 
STATEMENT_LIST''''' ::= STATEMENT_LIST | \L 
WHILE'''''' ::= NUMBER EXPRESSION' ; } | IDENTIFIER EXPRESSION' ; } | ( EXPRESSION ) EXPRESSION' ; } 
STATEMENT_LIST'''''' ::= STATEMENT_LIST | \L 
STATEMENT_LIST''''''' ::= STATEMENT_LIST | \L 
WHILE''''''' ::= if ( WHILE'''''''''' | IDENTIFIER = WHILE''''''''' | WHILE } | int IDENTIFIER ; } | float IDENTIFIER ; } 
STATEMENT_LIST'''''''' ::= STATEMENT_LIST | \L 
WHILE'''''''' ::= NUMBER EXPRESSION' ) { STATEMENT } else { STATEMENT } } | IDENTIFIER EXPRESSION' ) { STATEMENT } else { STATEMENT } } | ( EXPRESSION ) EXPRESSION' ) { STATEMENT } else { STATEMENT } } 
WHILE''''''''' ::= NUMBER EXPRESSION' ; } | IDENTIFIER EXPRESSION' ; } | ( EXPRESSION ) EXPRESSION' ; } 
STATEMENT_LIST''''''''' ::= STATEMENT_LIST | \L 
STATEMENT_LIST'''''''''' ::= STATEMENT_LIST | \L 
WHILE'''''''''' ::= NUMBER EXPRESSION' ) { STATEMENT } else { STATEMENT } } | IDENTIFIER EXPRESSION' ) { STATEMENT } else { STATEMENT } } | ( EXPRESSION ) EXPRESSION' ) { STATEMENT } else { STATEMENT } } 
STATEMENT_LIST''''''''''' ::= STATEMENT_LIST | \L 
